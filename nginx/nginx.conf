user  www www;
worker_processes  2;
worker_priority -10;
worker_rlimit_nofile 102400;
error_log  /usr/local/services/nginx/logs/error.log crit;
pid        /usr/local/services/nginx/logs/nginx.pid;

events {
    use epoll;
    worker_connections  102400;
}

#
#dso {
#    load ngx_http_fastcgi_module.so;
#    load ngx_http_rewrite_module.so;
#}

http {
    server_tokens                   off;
    include       mime.types;

	proxy_redirect                off;
  proxy_set_header              Host $host;
  proxy_set_header              X-Real-IP $remote_addr;
  proxy_set_header              X-Forwarded-For $proxy_add_x_forwarded_for;
  client_max_body_size          20m;
  client_body_buffer_size       256k;
  proxy_connect_timeout         90;
  proxy_send_timeout            90;
  proxy_read_timeout            90;
  proxy_buffer_size             128k;
  proxy_buffers                 4 64k;
  proxy_busy_buffers_size       128k;
  proxy_temp_file_write_size    128k;

    default_type  application/octet-stream;
    charset  utf8;
    server_names_hash_bucket_size 128;
    client_header_buffer_size 512k;
    large_client_header_buffers 8 64k;
 client_body_temp_path           /var/tmp/client_body_temp 1 2;
  proxy_temp_path                 /var/tmp/proxy_temp 1 2;
  fastcgi_temp_path               /var/tmp/fastcgi_temp 1 2;
  uwsgi_temp_path                 /var/tmp/uwsgi_temp 1 2;
  scgi_temp_path                  /var/tmp/scgi_temp 1 2;

    ignore_invalid_headers          on;
  server_names_hash_max_size      256;
  connection_pool_size            256;
  request_pool_size               64k;

  output_buffers                  2 128k;
  postpone_output                 1460;

  client_header_timeout           1m;
  client_body_timeout             3m;
  send_timeout                    3m;
    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay                     on;
    # 设置通过"一个存活长连接"送达的最大请求数（默认是100，建议根据客户端在"keepalive"存活时间内的总请求数来设置）
    #     # 当送达的请求数超过该值后，该连接就会被关闭。（通过设置为5，验证确实是这样）
  #  keepalive_requests 81920;
    
    keepalive_timeout  300s 300s;
    reset_timedout_connection       on;
  #  keepalive_timeout               10 5;
    keepalive_requests              100;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 512k;
    fastcgi_buffers 8 128k;
    fastcgi_busy_buffers_size 512k;
    fastcgi_temp_file_write_size 512k;

    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types       text/plain application/x-javascript text/css application/xml;
    gzip_vary on;
    gzip_disable msie6;
    #limit_zone  crawler  $binary_remote_addr  10m;
    log_format '$remote_addr - $remote_user [$time_local] "$request" '                              
               '$status $body_bytes_sent "$http_referer" '
               '"$http_user_agent" "$http_x_forwarded_for"';
    upstream api {
          server 10.26.161.60:8080 weight=3;
    # 连接到上游服务器的最大并发空闲keepalive长连接数（默认是未设置，建议与Tomcat Connector中的maxKeepAliveRequests值一样）
    #     # 当这个数被超过时，使用"最近最少使用算法(LUR)"来淘汰并关闭连接。
          keepalive 512;
    }
    upstream www {
          server 10.26.161.60:8080 weight=3;
    # 连接到上游服务器的最大并发空闲keepalive长连接数（默认是未设置，建议与Tomcat Connector中的maxKeepAliveRequests值一样）
    #     # 当这个数被超过时，使用"最近最少使用算法(LUR)"来淘汰并关闭连接。
          keepalive 512;
    }
    include /usr/local/services/nginx/conf/vhosts/*.conf;
}
